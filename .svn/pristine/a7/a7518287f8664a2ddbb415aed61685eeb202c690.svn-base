<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qycloud.oatos.server.dao.ShareFolderMapper">

	<resultMap id="ShareFolderResultMap" type="ShareFolder">
		<id property="folderId" column="folder_id" />
		<result property="enterpriseId" column="ent_id" />
		<result property="name" column="folder_name" />
		<result property="parentId" column="parent_id" />
		<result property="deleted" column="deleted" />
		<result property="maxSize" column="max_size" />
		<result property="shareLinkId" column="link_id" />
		<result property="thumb" column="thumb" />
		<result property="remark" column="remark" />
		<result property="version" column="version" />
		<result property="createUserId" column="create_user_id" />
		<result property="createTime" column="create_time" />
	</resultMap>

	<sql id="SelectShareFolderColumn">
		SELECT folder.folder_id, folder.ent_id, folder.folder_name, folder.parent_id, folder.deleted, folder.max_size, link.link_id, folder.version, folder.thumb, folder.remark, folder.create_user_id, folder.create_time
		FROM share_folder folder
		LEFT JOIN share_link link ON folder.folder_id = link.folder_id
	</sql>

	<insert id="addShareFolder" parameterType="ShareFolder">
		INSERT INTO share_folder (folder_id, ent_id, folder_name, parent_id, max_size, thumb, remark, version, create_user_id, create_time, deleted) 
		VALUES (#{folderId}, #{enterpriseId}, #{name}, #{parentId}, #{maxSize}, #{thumb}, #{remark}, #{version}, #{createUserId}, now(), #{deleted})
	</insert>

	<update id="updateShareFolder" parameterType="ShareFolder">
		UPDATE share_folder 
		SET folder_name = #{name},
		parent_id = #{parentId},
		max_size = #{maxSize},
		version = #{version},
		thumb = #{thumb},
		remark = #{remark},
		deleted = #{deleted}
		WHERE folder_id = #{folderId}
	</update>

	<update id="updateShareFolders">
		insert into share_folder (folder_id, ent_id, folder_name, parent_id, max_size, thumb, remark, version, deleted)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.folderId}, #{item.enterpriseId}, #{item.name}, #{item.parentId}, #{item.maxSize}, #{item.thumb}, #{item.remark}, #{item.version}, #{item.deleted})
		</foreach>
		on duplicate key update
		folder_name = values(folder_name),
		parent_id = values(parent_id),
		max_size = values(max_size),
		thumb = values(thumb),
		remark = values(remark),
		version = values(version),
		deleted = values(deleted)
	</update>

	<update id="deleteShareFolder" parameterType="ShareFolder">
		UPDATE share_folder SET 
			deleted = -1, version = #{version}
		WHERE folder_id = #{folderId}
	</update>

	<update id="deleteShareFolders">
		insert into share_folder (folder_id, ent_id, folder_name, parent_id, max_size, thumb, remark, version, deleted)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.folderId}, #{item.enterpriseId}, #{item.name}, #{item.parentId}, #{item.maxSize}, #{item.thumb}, #{item.remark}, #{item.version}, -1)
		</foreach>
		on duplicate key update
		version = values(version),
		deleted = -1
	</update>

	<select id="getShareFolderById" parameterType="long" resultMap="ShareFolderResultMap">
		<include refid="SelectShareFolderColumn"/>
		WHERE folder.folder_id = #{folderId}
	</select>
	
	<select id="getShareFoldersByEntId" parameterType="long" resultMap="ShareFolderResultMap">
		<include refid="SelectShareFolderColumn"/>
		WHERE folder.ent_id = #{entId} AND folder.deleted = 0
	</select>
	
	<select id="getSameShareFolder" parameterType="ShareFolder" resultType="ShareFolder">
		<include refid="SelectShareFolderColumn"/>
		WHERE folder.ent_id = #{enterpriseId} AND folder.folder_name = #{name} AND folder.deleted = 0
		<if test="folderId != null">
			<![CDATA[AND folder.folder_id <> #{folderId}]]>
		</if>
		<choose>
			<when test="parentId != null">
				AND folder.parent_id = #{parentId}
			</when>
			<otherwise>
				AND folder.parent_id IS NULL
			</otherwise>
		</choose>
	</select>
		
	<select id="getAllShareFoldersByEntId" parameterType="long" resultMap="ShareFolderResultMap">
		<include refid="SelectShareFolderColumn"/>
		<![CDATA[
		WHERE folder.ent_id = #{entId} AND folder.deleted <> -1
		]]>
	</select>
	
	<select id="getFoldersByEntIdAndFolderId" parameterType="map" resultMap="ShareFolderResultMap">
		<include refid="SelectShareFolderColumn"/>
		WHERE folder.ent_id = #{entId} AND folder.deleted = 0
		<choose>
			<when test="folderId != null">
				AND folder.parent_id = #{folderId}
			</when>
			<otherwise>
				AND folder.parent_id IS NULL
			</otherwise>
		</choose>
	</select>
	
	<select id="getShareFolderListInRecycleByEnterpriseId" parameterType="long" resultMap="ShareFolderResultMap">
		<include refid="SelectShareFolderColumn"/>
		<![CDATA[
		WHERE folder.ent_id = #{entId} AND folder.deleted = 1
		]]>
	</select>
	

</mapper>
