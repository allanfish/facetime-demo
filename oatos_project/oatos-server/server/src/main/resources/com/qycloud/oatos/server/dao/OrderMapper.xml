<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qycloud.oatos.server.dao.OrderMapper">

	<resultMap id="OrderInfoResultMap" type="OrderInfo">
		<id column="order_id" property="orderId" />
		<result column="ent_id" property="entId" />
		<result column="trade_no" property="tradeNo" />
		<result column="price" property="price" />
		<result column="offset" property="offset" />
		<result column="save" property="save" />
		<result column="type" property="type" />
		<result column="pay_date" property="payDate" />
		<result column="create_date" property="createDate" />
		<result column="status" property="status" />
		<result column="ent_name" property="entName" />
	</resultMap>
	
	<resultMap id="OrderItemResultMap" type="OrderItem">
		<id column="id" property="id" />
		<result column="order_id" property="orderId" />
		<result column="service_id" property="serviceId" />
		<result column="ent_id" property="entId" />
		<result column="amount" property="amount" />
		<result column="ratio" property="ratio" />
		<result column="per_price" property="perPrice" />
		<result column="price" property="price" />
		<result column="save" property="save" />
		<result column="offset" property="offset" />
		<result column="buy_year" property="buyYear" />
		<result column="start_date" property="startDate" />
		<result column="end_date" property="endDate" />
		<result column="service_name" property="serviceName" />
	</resultMap>

	<resultMap id="ServiceTypeResultMap" type="ServiceType">
		<id column="service_id" property="serviceId" />
		<result column="service_name" property="serviceName" />
		<result column="price" property="price" />
		<result column="desc" property="desc" />
	</resultMap>

	<resultMap id="ServiceStatusResultMap" type="ServiceStatus">
		<id column="ent_id" property="entId" />
		<result column="ent_disk_amount" property="entDiskAmount" />
		<result column="ent_disk_buy_year" property="entDiskBuyYear" />
		<result column="ent_disk_price" property="entDiskPrice" />
		<result column="ent_disk_start_date" property="entDiskStartDate" />
		<result column="ent_disk_end_date" property="entDiskEndDate" />
		<result column="personal_disk_amount" property="personalDiskAmount" />
		<result column="personal_disk_buy_year" property="personalDiskBuyYear" />
		<result column="personal_disk_price" property="personalDiskPrice" />
		<result column="personal_disk_start_date" property="personalDiskStartDate" />
		<result column="personal_disk_end_date" property="personalDiskEndDate" />
		<result column="user_count" property="userCount" />
		<result column="user_buy_year" property="userBuyYear" />
		<result column="user_price" property="userPrice" />
		<result column="user_start_date" property="userStartDate" />
		<result column="user_end_date" property="userEndDate" />
		<result column="share_link_amount" property="shareLinkAmount" />
		<result column="share_link_price" property="shareLinkPrice" />
	</resultMap>

	<sql id="Select_OrderInfo_Column">
		select order_id, order_info.ent_id, trade_no, price,
		offset, save, type, pay_date, create_date, order_info.status, enterprise.ent_name
		from order_info
		inner join enterprise on order_info.ent_id = enterprise.ent_id
  	</sql>

	<insert id="addOrderInfo" parameterType="OrderInfo">
		insert into
		order_info (order_id, ent_id, trade_no, price, offset, save, type, pay_date, create_date, status)
		values (#{orderId}, #{entId}, #{tradeNo}, #{price}, #{offset}, #{save}, #{type}, #{payDate}, #{createDate}, #{status})
  	</insert>
	<select id="getOrderInfoById" resultMap="OrderInfoResultMap"
		parameterType="long">
		<include refid="Select_OrderInfo_Column" />
		where order_id = #{orderId}
	</select>

	<select id="getOrderInfoByTradeNo" resultMap="OrderInfoResultMap"
		parameterType="String">
		<include refid="Select_OrderInfo_Column" />
		where trade_no = #{tradeNo}
	</select>

	<update id="updateOrderStatus" parameterType="OrderInfo">
		update order_info set
		status = #{status},
		pay_date = now()
		where order_id = #{orderId}
	</update>

	<select id="getOrderItemsByOrderId" resultMap="OrderItemResultMap"
		parameterType="long">
		select id, order_id, order_item.service_id, ent_id, amount, ratio, per_price, order_item.price,
		save, offset, buy_year, start_date, end_date, service_type.service_name
		from order_item
		inner join service_type on order_item.service_id = service_type.service_id
		where order_id = #{orderId}
	</select>
	
	<select id="getOrderItemsByEntId" resultMap="OrderItemResultMap"
		parameterType="long">
		select id, order_id, order_item.service_id, ent_id, amount, ratio, per_price, order_item.price,
		save, offset, buy_year, start_date, end_date, service_type.service_name
		from order_item
		inner join service_type on order_item.service_id = service_type.service_id
		where ent_id = #{ent_id}
	</select>

	<insert id="insertOrderItems">
		insert into
		order_item (id, order_id, service_id, ent_id, amount, ratio, per_price, price, save, offset, buy_year, start_date, end_date)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.id}, #{item.orderId}, #{item.serviceId}, #{item.entId}, #{item.amount}, #{item.ratio},
			#{item.perPrice}, #{item.price}, #{item.save}, #{item.offset}, #{item.buyYear}, #{item.startDate}, #{item.endDate})
		</foreach>
  	</insert>
	<select id="getServiceTypes" resultMap="ServiceTypeResultMap">
		select service_id, service_name, price, 'desc'
		from service_type
	</select>
	<select id="getServiceStatus" resultMap="ServiceStatusResultMap"
		parameterType="long">
		select ent_id, ent_disk_amount, ent_disk_buy_year, ent_disk_price, ent_disk_start_date, ent_disk_end_date,
		personal_disk_amount, personal_disk_buy_year, personal_disk_price, personal_disk_start_date, personal_disk_end_date,
		user_count, user_buy_year, user_price, user_start_date, user_end_date, share_link_amount, share_link_price
		from service_status
		where ent_id = #{entId}
	</select>

	<insert id="insertServiceStatus" parameterType="ServiceStatus">
		insert into service_status (ent_id, ent_disk_amount, ent_disk_buy_year, ent_disk_price, ent_disk_start_date, ent_disk_end_date,
		personal_disk_amount, personal_disk_buy_year, personal_disk_price, personal_disk_start_date, personal_disk_end_date,
		user_count, user_buy_year, user_price, user_start_date, user_end_date, share_link_amount, share_link_price)
		values (#{entId}, #{entDiskAmount}, #{entDiskBuyYear}, #{entDiskPrice}, #{entDiskStartDate}, #{entDiskEndDate},
		#{personalDiskAmount}, #{personalDiskBuyYear}, #{personalDiskPrice}, #{personalDiskStartDate}, #{personalDiskEndDate},
		#{userCount}, #{userBuyYear}, #{userPrice}, #{userStartDate}, #{userEndDate}, #{shareLinkAmount}, #{shareLinkPrice})
  	</insert>
	<update id="updateServiceStatus" parameterType="ServiceStatus">
		update service_status set
		ent_disk_amount = #{entDiskAmount},
		ent_disk_buy_year = #{entDiskBuyYear},
		ent_disk_price = #{entDiskPrice},
		ent_disk_start_date = #{entDiskStartDate},
		ent_disk_end_date = #{entDiskEndDate},
		personal_disk_amount = #{personalDiskAmount},
		personal_disk_buy_year = #{personalDiskBuyYear},
		personal_disk_price = #{personalDiskPrice},
		personal_disk_start_date = #{personalDiskStartDate},
		personal_disk_end_date = #{personalDiskEndDate},
		user_count = #{userCount},
		user_buy_year = #{userBuyYear},
		user_price = #{userPrice},
		user_start_date = #{userStartDate},
		user_end_date = #{userEndDate},
		share_link_amount = #{shareLinkAmount},
		share_link_price = #{shareLinkPrice}
		where ent_id = #{entId}
  	</update>
</mapper>
