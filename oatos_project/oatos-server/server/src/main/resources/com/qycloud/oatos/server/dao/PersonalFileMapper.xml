<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qycloud.oatos.server.dao.PersonalFileMapper">

	<resultMap id="PersonalFileResultMap" type="PersonalFile">
		<id property="fileId" column="file_id" />
		<result property="folderId" column="folder_id" />
		<result property="userId" column="user_id" />
		<result property="fileGuid" column="file_guid" />
		<result property="fileName" column="file_name" />
		<result property="fileSize" column="file_size" />
		<result property="creatTime" column="creat_time" />
		<result property="fileType" column="file_type" />
		<result property="updateTime" column="update_time" />
		<result property="deleted" column="deleted" />
		<result property="thumb" column="thumb" />
		<result property="remark" column="remark" />
		<result property="version" column="version" />
		<result property="pageCount" column="page_count" />
	</resultMap>

	<sql id="SelectPersonalFileColumn">
		SELECT file_id, folder_id, user_id, file_guid, file_name, file_size, creat_time, file_type, update_time, deleted, version, thumb, remark, page_count
		FROM network_file
	</sql>

	<insert id="addPersonalFile" parameterType="PersonalFile">
		INSERT INTO network_file(file_id, folder_id, user_id, file_guid, file_name, file_size, creat_time,
		file_type, update_time, thumb, remark)
		VALUES(#{fileId}, #{folderId}, #{userId}, #{fileGuid}, #{fileName}, #{fileSize}, now(),
		'', #{updateTime}, #{thumb}, #{remark})
	</insert>

	<update id="updatePersonalFile" parameterType="PersonalFile">
		UPDATE network_file
		SET
		folder_id = #{folderId},
		file_name = #{fileName},
		file_guid = #{fileGuid},
		file_size = #{fileSize},
		deleted = #{deleted},
		version = #{version},
		thumb = #{thumb},
		remark = #{remark},
		update_time = #{updateTime}
		WHERE file_id = #{fileId}
    </update>

	<delete id="deletePersonalFile" parameterType="long">
		DELETE FROM network_file 
		WHERE file_id = #{fileId}
    </delete>

	<select id="getFilesByUserId" parameterType="long" resultMap="PersonalFileResultMap">
		<include refid="SelectPersonalFileColumn"/>
		WHERE user_id = #{userId} AND deleted = 0
    </select>

	<select id="getFilesByFolderId" parameterType="long" resultMap="PersonalFileResultMap">
		<include refid="SelectPersonalFileColumn"/>
		WHERE folder_id = #{folderId}
    </select>

	<select id="getFileById" parameterType="long" resultMap="PersonalFileResultMap">
		<include refid="SelectPersonalFileColumn"/>
		WHERE file_id = #{fileId}
    </select>
    
	<select id="getSameNameFile" parameterType="PersonalFile" resultMap="PersonalFileResultMap">
		<include refid="SelectPersonalFileColumn"/>
		WHERE user_id = #{userId} AND file_name = #{fileName} and deleted = 0
		<if test="fileId != null">
			<![CDATA[AND file_id <> #{fileId}]]>
		</if>
		<choose>
			<when test="folderId != null">
				AND folder_id = #{folderId}
			</when>
			<otherwise>
				AND folder_id IS NULL
			</otherwise>
		</choose>
    </select>

	<select id="getFileSizeSumByUserId" parameterType="long" resultType="long">
		SELECT IFNULL(SUM(s), 0) FROM
		(
			(SELECT SUM(file_size) AS s FROM network_file 
			WHERE user_id = #{userId} AND deleted = 0)
		UNION
			(SELECT SUM(file_size) AS s FROM private_file_history 
			WHERE user_id = #{userId} AND operation = 'EditFile')
		) temp
    </select>

    <delete id="deleteFileByUserId" parameterType="long">
		DELETE FROM network_file WHERE user_id = #{userId}
	</delete>

	<select id="getAllFilesByUserId" parameterType="long" resultMap="PersonalFileResultMap">
		<include refid="SelectPersonalFileColumn"/>
		WHERE user_id = #{userId}
    </select>
    
	<update id="updatePersonalFilePageCount" parameterType="map">
		UPDATE network_file SET page_count = #{pageCount} WHERE file_id = #{fileId}
	</update>

	<select id="getFilesByUserIdAndFolderId" parameterType="map" resultMap="PersonalFileResultMap">
		<include refid="SelectPersonalFileColumn"/>
		WHERE user_id = #{userId} AND deleted = 0
		<choose>
			<when test="folderId != null">
				AND folder_id = #{folderId}
			</when>
			<otherwise>
				AND folder_id IS NULL
			</otherwise>
		</choose>
    </select>
    
	<select id="getFileList" parameterType="map" resultMap="PersonalFileResultMap">
		<include refid="SelectPersonalFileColumn"/>
		WHERE user_id = #{userId} and folder_id = #{folderId} and file_name in (#{fileNames}) and deleted = 0
    </select>
    
	<select id="getPersonalFileInRecycleByUserId" parameterType="long" resultMap="PersonalFileResultMap">
		<include refid="SelectPersonalFileColumn"/>
		WHERE user_id = #{userId} and deleted = 1
    </select>

</mapper>